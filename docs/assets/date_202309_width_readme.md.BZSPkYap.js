import{_ as s,c as i,o as t,a2 as a}from"./chunks/framework.BNFXvbzm.js";const h="/assets/image.BD1WsCVI.png",n="/assets/image-1.BgAY4F9_.png",m=JSON.parse('{"title":"宽度问题","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"date/202309/width/readme.md","filePath":"date/202309/width/readme.md"}'),d={name:"date/202309/width/readme.md"},p=a(`<h1 id="宽度问题" tabindex="-1">宽度问题 <a class="header-anchor" href="#宽度问题" aria-label="Permalink to &quot;宽度问题&quot;">​</a></h1><h2 id="一、魔法" tabindex="-1">一、魔法 <a class="header-anchor" href="#一、魔法" aria-label="Permalink to &quot;一、魔法&quot;">​</a></h2><p>为 DOM 设置宽度有哪些方式呢？最常用的是配置<code>width</code>属性，<code>width</code>属性在配置时，也有多种方式：</p><ul><li>width</li><li>min-width</li><li>max-width</li></ul><p>通常当配置了 width 时，不会再配置<code>min-width</code> <code>max-width</code>，如果将这三者混合使用，会有什么魔法效果呢？</p><p>测试代码：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inline-block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #e8e8e8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    min-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    max-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;box&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;sdsd&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><table><thead><tr><th>min-width</th><th>width</th><th>max-width</th><th>盒子最终宽度</th></tr></thead><tbody><tr><td>200px</td><td></td><td></td><td>最小宽度 200px</td></tr><tr><td></td><td>100px</td><td></td><td>定宽 100px</td></tr><tr><td></td><td></td><td>300px</td><td>最大宽度 300px</td></tr><tr><td>200px</td><td>100px</td><td></td><td>定宽 Max(min-width, width)</td></tr><tr><td></td><td>100px</td><td>300px</td><td>定宽 Min(width, max-width)</td></tr><tr><td>200px</td><td>100px</td><td>300px</td><td>定宽 Max(min-width, width)</td></tr></tbody></table><h2 id="二、应用" tabindex="-1">二、应用 <a class="header-anchor" href="#二、应用" aria-label="Permalink to &quot;二、应用&quot;">​</a></h2><p><img src="`+h+'" alt="Alt text"></p><p>ElementUI 的组件 Select，当可选项的文本较长时，弹框也会跟着扩增宽度，因为它只设置了<code>min-width</code>属性。</p><p>提出需求，当可选项的文本过长时，以省略号展示，不运行弹框宽度增加。</p><p>此时可以应用上述的规则，为弹框添加一个<code>width: 0px</code>即可</p><p><img src="'+n+'" alt="Alt text"></p>',14),l=[p];function e(k,r,E,o,c,g){return t(),i("div",null,l)}const F=s(d,[["render",e]]);export{m as __pageData,F as default};

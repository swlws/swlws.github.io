import{_ as a,c as e,o as l,a2 as t}from"./chunks/framework.BNFXvbzm.js";const _=JSON.parse('{"title":"API 网关","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"date/202210/Api网关.md","filePath":"date/202210/Api网关.md","lastUpdated":1708846230000}'),r={name:"date/202210/Api网关.md"},i=t('<h1 id="api-网关" tabindex="-1">API 网关 <a class="header-anchor" href="#api-网关" aria-label="Permalink to &quot;API 网关&quot;">​</a></h1><h2 id="一、背景" tabindex="-1">一、背景 <a class="header-anchor" href="#一、背景" aria-label="Permalink to &quot;一、背景&quot;">​</a></h2><p>微服务体系中，如果未部署网关，则客户端必须直接向前端服务发送请求。 但是，直接向客户端公开服务会造成一些潜在问题：</p><ul><li>可能需要编写复杂的客户端代码。 客户端必须跟踪多个终结点，并以弹性方式处理故障。</li><li>会在客户端与后端之间造成耦合。 客户端需要知道如何分解各个服务。 因此，客户端维护和服务重构会变得更困难。</li><li>单个操作可能需要调用多个服务。 这可能导致客户端和服务器之间的多次网络往返，从而显著增加了延迟时间。</li><li>每个面向公众的服务必须处理身份验证、SSL 和客户端速率限制等问题。</li><li>服务必须公开客户端友好的协议，例如 HTTP 或 WebSocket。 这就限制了通信协议的选择。</li><li>包含公共终结点的服务是潜在的受攻击面，必须得到强化。</li></ul><h2 id="二、api-网关" tabindex="-1">二、API 网关 <a class="header-anchor" href="#二、api-网关" aria-label="Permalink to &quot;二、API 网关&quot;">​</a></h2><p>位置：API 网关位于客户端与服务之间</p><p>作用：</p><ul><li>充当反向代理，将来自客户端的请求路由到服务。</li><li>执行各种横切任务，例如身份验证、SSL 终止和速率限制</li></ul><p>网关的功能，划分为三类：</p><ul><li>网关路由。使用网关作为反向代理，网关为客户端提供单一终结点，可帮助将客户端与服务分开。</li><li>网关聚合。将多个单独请求聚合成一个请求。</li><li>网关卸载。将单个服务的功能卸载到网关，尤其适合用于解决横切问题。 <ul><li><a href="https://www.racent.com/blog/ssl-offloading-bridging-termination" target="_blank" rel="noreferrer">SSL 终止</a></li><li>访问控制，IP 允许/阻止列表</li><li>流量控制，客户端速率限制（限制）</li><li>日志记录和监视</li><li>Authentication。登录凭证校验、API 资源调用权限校验</li><li>API 参数清洗</li><li>响应缓存</li><li>Web 应用程序防火墙</li><li>GZIP 压缩</li><li>为静态内容提供服务</li></ul></li><li>发布 <ul><li>金丝雀</li><li>灰度发布</li></ul></li><li>持续集成 <ul><li>对接 swagger 文档</li></ul></li></ul><p>支持的应用层协议：</p><ul><li>HTTP、HTTPS</li><li>WebSocket</li></ul><h2 id="三、功能" tabindex="-1">三、功能 <a class="header-anchor" href="#三、功能" aria-label="Permalink to &quot;三、功能&quot;">​</a></h2><h3 id="_3-1-api-路由转发" tabindex="-1">3.1 API 路由转发 <a class="header-anchor" href="#_3-1-api-路由转发" aria-label="Permalink to &quot;3.1 API 路由转发&quot;">​</a></h3><p>使用反向代理服务器，一般使用 Nginx 和 HAProxy。</p><p>支持的协议：HTTP、HTTPS、WebSocket</p><h3 id="_3-2-api-路由聚合" tabindex="-1">3.2 API 路由聚合 <a class="header-anchor" href="#_3-2-api-路由聚合" aria-label="Permalink to &quot;3.2 API 路由聚合&quot;">​</a></h3><p>BFF（Backend For Frontend），服务于前端的后端。为每一种客户端适配一个网关，组装、过滤客户端需要的数据（不关心业务）。</p><h3 id="_3-3-ssl-终止" tabindex="-1">3.3 SSL 终止 <a class="header-anchor" href="#_3-3-ssl-终止" aria-label="Permalink to &quot;3.3 SSL 终止&quot;">​</a></h3><p>客户端到网关层使用 HTTPS 协议，网关层到各个服务层使用 HTTP 协议。</p><h3 id="_3-4-流量控制" tabindex="-1">3.4 流量控制 <a class="header-anchor" href="#_3-4-流量控制" aria-label="Permalink to &quot;3.4 流量控制&quot;">​</a></h3><p>限制单位时间内 API 的被调用次数，保护后端服务。</p><h3 id="_3-5-访问控制" tabindex="-1">3.5 访问控制 <a class="header-anchor" href="#_3-5-访问控制" aria-label="Permalink to &quot;3.5 访问控制&quot;">​</a></h3><p>控制访问 API 的 IP 地址和帐户，设置 IP 地址或帐户的黑白名单来拒绝/允许某个 IP 地址或帐户访问 API。</p><h3 id="_3-6-流量监控" tabindex="-1">3.6 流量监控 <a class="header-anchor" href="#_3-6-流量监控" aria-label="Permalink to &quot;3.6 流量监控&quot;">​</a></h3><p>监控 API 的延迟、流入流量、流出流量、调用次数等。参考<a href="https://support.huaweicloud.com/intl/zh-cn/usermanual-apig/apig-ug-180427085.html" target="_blank" rel="noreferrer">华为云 API 网关的指标</a></p><h3 id="_3-7-日志分析" tabindex="-1">3.7 日志分析 <a class="header-anchor" href="#_3-7-日志分析" aria-label="Permalink to &quot;3.7 日志分析&quot;">​</a></h3><p>分析的指标：</p><ul><li>PV、UV</li><li>客户端种类分布移动端、PC 端口；Chrome、Firefox</li><li>访客 IP 分布</li></ul><h3 id="_3-8-鉴权" tabindex="-1">3.8 鉴权 <a class="header-anchor" href="#_3-8-鉴权" aria-label="Permalink to &quot;3.8 鉴权&quot;">​</a></h3><table><thead><tr><th>鉴权对象</th><th>方式</th></tr></thead><tbody><tr><td>应用鉴权</td><td>为应用设置 AppCode，请求中携带正确的 AppCode 时，鉴权通过。</td></tr><tr><td>用户鉴权</td><td>云账号；基于 OAuth 2.0 协议的 OpenID；无认证</td></tr><tr><td>API 鉴权</td><td>插件，拦截请求，配合具体业务具体实现</td></tr></tbody></table><h2 id="四、产品设计" tabindex="-1">四、产品设计 <a class="header-anchor" href="#四、产品设计" aria-label="Permalink to &quot;四、产品设计&quot;">​</a></h2><p>一个 API 网关产品，通常会抽象出：</p><ul><li>Upstream 上游</li><li>Router 路由</li><li>API Group（有的产品也叫服务）</li><li>Plugin 插件</li></ul><p><strong>Router</strong></p><p>通过路由定义规则来匹配客户端请求，根据匹配结果加载并执行相应的插件，最后把请求转发给到指定的上游应用</p><p><strong>Api Group</strong></p><p>路由集合。可以通过 Group 统一配置 API 的转发、横切任务。</p><p><strong>Upstream</strong></p><p>上游的作用是按照配置规则对服务节点进行负载均衡，它的地址信息可以直接配置到路由或服务上。</p><p><strong>Plugin</strong></p><p>内置横切任务插件，比如 KeyAuth、日志审计等。</p><p>可以单独为路由配置插件，也可以为 Group 配置插件。</p><h2 id="五、产品" tabindex="-1">五、产品 <a class="header-anchor" href="#五、产品" aria-label="Permalink to &quot;五、产品&quot;">​</a></h2><ul><li><a href="https://help.aliyun.com/product/29462.html" target="_blank" rel="noreferrer">阿里云 API 网关</a></li><li><a href="https://cloud.baidu.com/doc/APIGW/index.html" target="_blank" rel="noreferrer">百度智能云 API 网关</a></li><li><a href="https://support.huaweicloud.com/intl/zh-cn/apig/index.html" target="_blank" rel="noreferrer">华为云 API 网关</a></li><li><a href="https://cloud.tencent.com/document/product/628" target="_blank" rel="noreferrer">腾讯云 API 网关</a></li><li><a href="https://apisix.apache.org/zh/docs/apisix/getting-started/" target="_blank" rel="noreferrer">Apache APISIX</a></li><li><a href="https://docs.konghq.com/gateway/latest/" target="_blank" rel="noreferrer">Kong</a></li><li><a href="https://www.express-gateway.io/docs/core-concepts/" target="_blank" rel="noreferrer">express gateway</a></li></ul><hr><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li>[^1] <a href="https://learn.microsoft.com/zh-cn/azure/architecture/microservices/design/gateway" target="_blank" rel="noreferrer">在微服务中使用 API 网关</a></li><li>[^2] <a href="https://help.aliyun.com/document_detail/29466.html" target="_blank" rel="noreferrer">阿里云 API 网关-功能列表</a></li><li>[^3] <a href="https://help.aliyun.com/document_detail/48019.htm?spm=a2c4g.11186623.0.0.41ab26d3JQFmKl#topic9444" target="_blank" rel="noreferrer">阿里云 API 网关-API 网关 OpenID Connect 使用指南</a></li><li>[^4] <a href="https://cloud.baidu.com/doc/APIGW/index.html" target="_blank" rel="noreferrer">百度智能云 API</a></li></ul>',48),o=[i];function h(n,p,d,s,c,u){return l(),e("div",null,o)}const b=a(r,[["render",h]]);export{_ as __pageData,b as default};

import{_ as s,c as i,o as a,a2 as t}from"./chunks/framework.aTtkxbT6.js";const F=JSON.parse('{"title":"HTTP 速查手册","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"date/202211/HTTP手册.md","filePath":"date/202211/HTTP手册.md","lastUpdated":1708846230000}'),n={name:"date/202211/HTTP手册.md"},h=t(`<h1 id="http-速查手册" tabindex="-1">HTTP 速查手册 <a class="header-anchor" href="#http-速查手册" aria-label="Permalink to &quot;HTTP 速查手册&quot;">​</a></h1><h2 id="一、通用身份验证" tabindex="-1">一、通用身份验证 <a class="header-anchor" href="#一、通用身份验证" aria-label="Permalink to &quot;一、通用身份验证&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 服务端返回401，并告知验证类型为Basic</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GET</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 401</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Unauthorized</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WWW-Authenticate:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Basic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> realm=&quot;description&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 浏览器输入验证信息后，请求头中携带验证信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Authorization:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Basic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xxxxxxxxxx</span></span></code></pre></div><h2 id="二、cookie" tabindex="-1">二、Cookie <a class="header-anchor" href="#二、cookie" aria-label="Permalink to &quot;二、Cookie&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 服务端返回set-cookie</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-cookie: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">name=xxxxx</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-cookie: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">age=xxxxx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用户代理记录Cookie，并在下次请求时携带Cookie</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cookie:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name=xxxxx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; age</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">xxxxx</span></span></code></pre></div><h2 id="三、永久重定向" tabindex="-1">三、永久重定向 <a class="header-anchor" href="#三、永久重定向" aria-label="Permalink to &quot;三、永久重定向&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 状态码配置为301</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GET</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 301</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Location:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://example.com</span></span></code></pre></div><h2 id="四、临时重定向" tabindex="-1">四、临时重定向 <a class="header-anchor" href="#四、临时重定向" aria-label="Permalink to &quot;四、临时重定向&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 状态码配置为302</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GET</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 302</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Location:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://example.com</span></span></code></pre></div><h2 id="五、html-重定向" tabindex="-1">五、HTML 重定向 <a class="header-anchor" href="#五、html-重定向" aria-label="Permalink to &quot;五、HTML 重定向&quot;">​</a></h2><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 通过HTML标签实现重定向 --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> http-equiv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Refresh&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0; URL=http://example.com/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 通过JS实现重定向</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.location </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http://example.com/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="六、访问控制策略" tabindex="-1">六、访问控制策略 <a class="header-anchor" href="#六、访问控制策略" aria-label="Permalink to &quot;六、访问控制策略&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// headers配置</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 允许所有来源</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Access</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Control</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Allow</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Origin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 允许所有方法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Access</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Control</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Allow</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Methods</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 允许所有Headers</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Access</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Control</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Allow</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Headers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 响应的有效时间为 86400 秒，也就是 24 小时。在有效时间内，浏览器无须为同一请求再次发起预检请求。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Access</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Control</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Max</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Age</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">86400</span></span></code></pre></div><h2 id="七、http-缓存" tabindex="-1">七、HTTP 缓存 <a class="header-anchor" href="#七、http-缓存" aria-label="Permalink to &quot;七、HTTP 缓存&quot;">​</a></h2><p>混存的种类：</p><ul><li>私有缓存。eg：浏览器</li><li>共享缓存 <ul><li>代理缓存。eg：代理设备（Nginx 代理）</li><li>托管缓存。eg：反向代理、CDN 和 service worker 与缓存 API 的组合。</li></ul></li></ul><h3 id="_7-1-cache-control" tabindex="-1">7.1 Cache-Control <a class="header-anchor" href="#_7-1-cache-control" aria-label="Permalink to &quot;7.1 Cache-Control&quot;">​</a></h3><p><strong>Response：</strong></p><table><thead><tr><th>value</th><th>description</th></tr></thead><tbody><tr><td>private</td><td>数据可以被<code>私有缓存</code>存储（eg：浏览器）</td></tr><tr><td>public</td><td>数据可以被<code>共享缓存</code>存储 （eg：代理缓存、托管缓存）</td></tr><tr><td>no-cache</td><td>相应的数据可以被缓存，但之后的每次请求需要向源服务端做文件有效性校验</td></tr><tr><td>no-store</td><td>任何种类的缓存（私有缓存、共享缓存）都不应缓存数据</td></tr><tr><td>max-age=0</td><td>不直接使用本地缓存，需向目标服务端做新鲜度</td></tr><tr><td>must-revalidate</td><td>缓存未过期时，可以直接使用；过期后，需要向源服务端做文件有效性校验</td></tr><tr><td>proxy-revalidate</td><td>等价于<code>must-revalidate</code> ，但仅共享缓存有效</td></tr></tbody></table><p><strong>Request</strong></p><table><thead><tr><th>value</th><th>description</th></tr></thead><tbody><tr><td>no-cache</td><td>要求缓存做新鲜度校验</td></tr><tr><td>no-store</td><td>即使源服务端的响应，可以被缓存，也不应该缓存</td></tr><tr><td>max-age</td><td>客户端告诉服务端，客户端允许的最大缓存时长（秒）</td></tr></tbody></table><h3 id="_7-2-验证响应" tabindex="-1">7.2 验证响应 <a class="header-anchor" href="#_7-2-验证响应" aria-label="Permalink to &quot;7.2 验证响应&quot;">​</a></h3><p><strong>基于文件最后更新时间</strong></p><blockquote><p>Last-Modified / If-Modified-Since</p></blockquote><p><strong>基于正文内容 Hash</strong></p><blockquote><p>ETag / If-None-Match</p></blockquote><p><strong>强制重新验证</strong></p><p>方式一：</p><blockquote><p>Cache-Control: no-cache</p></blockquote><p>方式二：</p><blockquote><p>Cache-Control: max-age=0, must-revalidate</p></blockquote><h2 id="八、范围请求" tabindex="-1">八、范围请求 <a class="header-anchor" href="#八、范围请求" aria-label="Permalink to &quot;八、范围请求&quot;">​</a></h2><p><em>STEP 1：检测是否支持范围请求</em></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -I</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://example.com</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 若支持范围请求，则Headers中存在Accept-Ranges、Content-Length</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HTTP/1.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OK</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Accept-Ranges:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bytes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Content-Length:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 146515</span></span></code></pre></div><p>若<code>Accept-Ranges</code>字段存在，且值非<code>none</code>，则支持范围请求。</p><p><em>STEP 2：发送范围请求</em></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://exmaple.com/test.jpg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Range: bytes=0-1023&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 响应头</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HTTP/1.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 206</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Partial</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Content</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Content-Range:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bytes</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-1023/146515</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Content-Length:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1024</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">binary</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,38),e=[h];function l(p,k,d,r,o,c){return a(),i("div",null,e)}const y=s(n,[["render",l]]);export{F as __pageData,y as default};
